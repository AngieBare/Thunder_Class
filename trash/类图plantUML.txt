@startuml

skinparam classAttributeIconSize 0

package basic
{
	class OSAPIWrapper
	class AudioEncoder
	class VideoEncoder
	class Status
	class InternalEvent
	class NetworkMessage
}

package core
{
	class TaskController
	class TaskExecutor
}

package gui
{
	class GUIAdaptor
	class QtGUIAdaptor
}

package Qt
{
	class QtGUIWindow
	class QTimer
}

abstract class TaskController
{
	+ isServer: bool
	+ {abstract} doLogin():void
}

note top of TaskController: Abstract class, as a delegate of Server or Client TaskController in the program


class InternalEvent
{
	-eventId:int
	-eventData:DataType
}

note bottom of InternalEvent: Event generated by TaskController object to change GUI and handled by GUIAdaptor

class Status
{
	-connectionList: vector<string>
}

abstract class GUIAdaptor
{
	-TaskController:TaskController

	__ pseudo constructors and destructors __
	+ create():void
	+ destroy():void

	__ Handlers of Events generated by GUI  __
	+ {abstract} onLogin(string, string):int
	+ {abstract} onAdminChangeList():void
	+ {abstract} onRequireAudioOutputList():vector<string>
	+ {abstract} onRequireAudioInputList():vector<string>
	+ {abstract} onSelectAudioOutput():int
	+ {abstract} onSelectAudioInput():int
	+ {abstract} onShareScreen():void
	+ {abstract} onShareAudio():void
	+ {abstract} onRaiseQuestion():void
	+ {abstract} onCreateTest():void
	+ {abstract} onStudentEnter():void
	+ {abstract} onFocusChange():void

	__ Handlers of InternalEvents generated by TaskController object  __

	..Login/Logout..
	+ {abstract} closeLoginWindow():bool
	+ {abstract} showLoginWindow():void
	+ {abstract} quitApplication():void

	..Classroom..
	+ {abstract} showClassroomWindow():void
	+ {abstract} closeClassroomWindow():bool

	..Management..
	+ {abstract} showAdminWindow():void
	+ {abstract} closeAdminWindow():bool
	+ {abstract} addShowTaskControllers(string, string, string, string):void
}
note top of GUIAdaptor: Abstract class for workflow control logic (independent of specific GUI implementation)


class QtGUIAdaptor
{
	-window:QtGUIWindow
}

note top of QtGUIAdaptor: Implementation of GUIAdaptor bound to a specific type of GUIWindow (Qt)

GUIAdaptor <|.. QtGUIAdaptor
TaskController <|.. TaskExecutor

TaskExecutor ..> OSAPIWrapper
TaskExecutor ..> NetworkMessage
TaskExecutor ..> Status
TaskExecutor ..> InternalEvent

TaskExecutor ..> VideoEncoder
TaskExecutor ..> AudioEncoder

GUIAdaptor ..> TaskController
GUIAdaptor ..>InternalEvent
QtGUIAdaptor ..> QtGUIWindow
QtGUIAdaptor ..> QTimer

note bottom of QtGUIWindow: Specific GUI Window classes (Qt, MFC, etc)
note bottom of NetworkMessage: Message data structures transferred between terminals
note bottom of OSAPIWrapper: Wrapper of Operating System API for insulation



@enduml